{"ast":null,"code":"var _jsxFileName = \"C:\\\\DJ-SITE\\\\DJ-SITE\\\\frontend\\\\src\\\\components\\\\Modal\\\\Modal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport Portal, { createContainer } from \"../portal\";\nimport Styles from \"./index.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MODAL_CONTAINER_ID = \"modal-container-id\";\nconst Modal = props => {\n  _s();\n  const {\n    title,\n    onClose,\n    children\n  } = props;\n  const rootRef = useRef(null);\n  const [isMounted, setMounted] = useState(false);\n  useEffect(() => {\n    createContainer({\n      id: MODAL_CONTAINER_ID\n    });\n    setMounted(true);\n  }, []);\n  useEffect(() => {\n    const handleWrapperClick = event => {\n      const {\n        target\n      } = event;\n      if (target instanceof Node && rootRef.current === target) {\n        onClose === null || onClose === void 0 ? void 0 : onClose();\n      }\n    };\n    const handleEscapePress = event => {\n      if (event.key === \"Escape\") {\n        onClose === null || onClose === void 0 ? void 0 : onClose();\n      }\n    };\n    window.addEventListener(\"click\", handleWrapperClick);\n    window.addEventListener(\"keydown\", handleEscapePress);\n    return () => {\n      window.removeEventListener(\"click\", handleWrapperClick);\n      window.removeEventListener(\"keydown\", handleEscapePress);\n    };\n  }, [onClose]);\n  const handleClose = useCallback(() => {\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  }, [onClose]);\n  return isMounted ? /*#__PURE__*/_jsxDEV(Portal, {\n    id: MODAL_CONTAINER_ID,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.wrap,\n      ref: rootRef,\n      \"data-testid\": \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.content,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: Styles.closeButton,\n          onClick: handleClose,\n          \"data-testid\": \"modal-close-button\",\n          children: \"\\u0425\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Styles.title,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(Modal, \"6mJpiep2uWpqlQINX2BDBY4BHqg=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","Portal","createContainer","Styles","jsxDEV","_jsxDEV","MODAL_CONTAINER_ID","Modal","props","_s","title","onClose","children","rootRef","isMounted","setMounted","id","handleWrapperClick","event","target","Node","current","handleEscapePress","key","window","addEventListener","removeEventListener","handleClose","className","wrap","ref","content","type","closeButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/DJ-SITE/DJ-SITE/frontend/src/components/Modal/Modal.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport type { MouseEventHandler } from \"react\";\r\n\r\nimport Portal, { createContainer } from \"../portal\";\r\n\r\nimport Styles from \"./index.module.css\";\r\n\r\nconst MODAL_CONTAINER_ID = \"modal-container-id\";\r\n\r\ntype Props = {\r\n  title: string;\r\n  onClose?: () => void;\r\n  children: React.ReactNode | React.ReactNode[];\r\n};\r\n\r\nconst Modal = (props: Props) => {\r\n  const { title, onClose, children } = props;\r\n\r\n  const rootRef = useRef<HTMLDivElement>(null);\r\n  const [isMounted, setMounted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    createContainer({ id: MODAL_CONTAINER_ID });\r\n    setMounted(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleWrapperClick = (event: MouseEvent) => {\r\n      const { target } = event;\r\n\r\n      if (target instanceof Node && rootRef.current === target) {\r\n        onClose?.();\r\n      }\r\n    };\r\n    const handleEscapePress = (event: KeyboardEvent) => {\r\n      if (event.key === \"Escape\") {\r\n        onClose?.();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"click\", handleWrapperClick);\r\n    window.addEventListener(\"keydown\", handleEscapePress);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"click\", handleWrapperClick);\r\n      window.removeEventListener(\"keydown\", handleEscapePress);\r\n    };\r\n  }, [onClose]);\r\n\r\n  const handleClose: MouseEventHandler<\r\n    HTMLDivElement | HTMLButtonElement\r\n  > = useCallback(() => {\r\n    onClose?.();\r\n  }, [onClose]);\r\n\r\n  return isMounted ? (\r\n    <Portal id={MODAL_CONTAINER_ID}>\r\n      <div className={Styles.wrap} ref={rootRef} data-testid=\"wrap\">\r\n        <div className={Styles.content}>\r\n          <button\r\n            type=\"button\"\r\n            className={Styles.closeButton}\r\n            onClick={handleClose}\r\n            data-testid=\"modal-close-button\"\r\n          >\r\n            Ð¥\r\n          </button>\r\n          <p className={Styles.title}>{title}</p>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </Portal>\r\n  ) : null;\r\n};\r\n\r\nexport default Modal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}