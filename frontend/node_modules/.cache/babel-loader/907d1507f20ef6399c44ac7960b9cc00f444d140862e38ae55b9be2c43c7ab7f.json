{"ast":null,"code":"export const filterBreakpointKeys = (breakpointsKeys, responsiveKeys) => breakpointsKeys.filter(key => responsiveKeys.includes(key));\nexport const traverseBreakpoints = (breakpoints, responsive, iterator) => {\n  const smallestBreakpoint = breakpoints.keys[0]; // the keys is sorted from smallest to largest by `createBreakpoints`.\n\n  if (Array.isArray(responsive)) {\n    responsive.forEach((breakpointValue, index) => {\n      iterator((responsiveStyles, style) => {\n        if (index <= breakpoints.keys.length - 1) {\n          if (index === 0) {\n            Object.assign(responsiveStyles, style);\n          } else {\n            responsiveStyles[breakpoints.up(breakpoints.keys[index])] = style;\n          }\n        }\n      }, breakpointValue);\n    });\n  } else if (responsive && typeof responsive === 'object') {\n    // prevent null\n    // responsive could be a very big object, pick the smallest responsive values\n\n    const keys = Object.keys(responsive).length > breakpoints.keys.length ? breakpoints.keys : filterBreakpointKeys(breakpoints.keys, Object.keys(responsive));\n    keys.forEach(key => {\n      if (breakpoints.keys.indexOf(key) !== -1) {\n        // @ts-ignore already checked that responsive is an object\n        const breakpointValue = responsive[key];\n        if (breakpointValue !== undefined) {\n          iterator((responsiveStyles, style) => {\n            if (smallestBreakpoint === key) {\n              Object.assign(responsiveStyles, style);\n            } else {\n              responsiveStyles[breakpoints.up(key)] = style;\n            }\n          }, breakpointValue);\n        }\n      }\n    });\n  } else if (typeof responsive === 'number' || typeof responsive === 'string') {\n    iterator((responsiveStyles, style) => {\n      Object.assign(responsiveStyles, style);\n    }, responsive);\n  }\n};","map":{"version":3,"names":["filterBreakpointKeys","breakpointsKeys","responsiveKeys","filter","key","includes","traverseBreakpoints","breakpoints","responsive","iterator","smallestBreakpoint","keys","Array","isArray","forEach","breakpointValue","index","responsiveStyles","style","length","Object","assign","up","indexOf","undefined"],"sources":["C:/Users/qskov/OneDrive/Рабочий стол/DJ-SITE/DJ-SITE/frontend/node_modules/@mui/system/esm/Unstable_Grid/traverseBreakpoints.js"],"sourcesContent":["export const filterBreakpointKeys = (breakpointsKeys, responsiveKeys) => breakpointsKeys.filter(key => responsiveKeys.includes(key));\r\nexport const traverseBreakpoints = (breakpoints, responsive, iterator) => {\r\n  const smallestBreakpoint = breakpoints.keys[0]; // the keys is sorted from smallest to largest by `createBreakpoints`.\r\n\r\n  if (Array.isArray(responsive)) {\r\n    responsive.forEach((breakpointValue, index) => {\r\n      iterator((responsiveStyles, style) => {\r\n        if (index <= breakpoints.keys.length - 1) {\r\n          if (index === 0) {\r\n            Object.assign(responsiveStyles, style);\r\n          } else {\r\n            responsiveStyles[breakpoints.up(breakpoints.keys[index])] = style;\r\n          }\r\n        }\r\n      }, breakpointValue);\r\n    });\r\n  } else if (responsive && typeof responsive === 'object') {\r\n    // prevent null\r\n    // responsive could be a very big object, pick the smallest responsive values\r\n\r\n    const keys = Object.keys(responsive).length > breakpoints.keys.length ? breakpoints.keys : filterBreakpointKeys(breakpoints.keys, Object.keys(responsive));\r\n    keys.forEach(key => {\r\n      if (breakpoints.keys.indexOf(key) !== -1) {\r\n        // @ts-ignore already checked that responsive is an object\r\n        const breakpointValue = responsive[key];\r\n        if (breakpointValue !== undefined) {\r\n          iterator((responsiveStyles, style) => {\r\n            if (smallestBreakpoint === key) {\r\n              Object.assign(responsiveStyles, style);\r\n            } else {\r\n              responsiveStyles[breakpoints.up(key)] = style;\r\n            }\r\n          }, breakpointValue);\r\n        }\r\n      }\r\n    });\r\n  } else if (typeof responsive === 'number' || typeof responsive === 'string') {\r\n    iterator((responsiveStyles, style) => {\r\n      Object.assign(responsiveStyles, style);\r\n    }, responsive);\r\n  }\r\n};"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAGA,CAACC,eAAe,EAAEC,cAAc,KAAKD,eAAe,CAACE,MAAM,CAACC,GAAG,IAAIF,cAAc,CAACG,QAAQ,CAACD,GAAG,CAAC,CAAC;AACpI,OAAO,MAAME,mBAAmB,GAAGA,CAACC,WAAW,EAAEC,UAAU,EAAEC,QAAQ,KAAK;EACxE,MAAMC,kBAAkB,GAAGH,WAAW,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEhD,IAAIC,KAAK,CAACC,OAAO,CAACL,UAAU,CAAC,EAAE;IAC7BA,UAAU,CAACM,OAAO,CAAC,CAACC,eAAe,EAAEC,KAAK,KAAK;MAC7CP,QAAQ,CAAC,CAACQ,gBAAgB,EAAEC,KAAK,KAAK;QACpC,IAAIF,KAAK,IAAIT,WAAW,CAACI,IAAI,CAACQ,MAAM,GAAG,CAAC,EAAE;UACxC,IAAIH,KAAK,KAAK,CAAC,EAAE;YACfI,MAAM,CAACC,MAAM,CAACJ,gBAAgB,EAAEC,KAAK,CAAC;UACxC,CAAC,MAAM;YACLD,gBAAgB,CAACV,WAAW,CAACe,EAAE,CAACf,WAAW,CAACI,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,GAAGE,KAAK;UACnE;QACF;MACF,CAAC,EAAEH,eAAe,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,MAAM,IAAIP,UAAU,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE;IACvD;IACA;;IAEA,MAAMG,IAAI,GAAGS,MAAM,CAACT,IAAI,CAACH,UAAU,CAAC,CAACW,MAAM,GAAGZ,WAAW,CAACI,IAAI,CAACQ,MAAM,GAAGZ,WAAW,CAACI,IAAI,GAAGX,oBAAoB,CAACO,WAAW,CAACI,IAAI,EAAES,MAAM,CAACT,IAAI,CAACH,UAAU,CAAC,CAAC;IAC1JG,IAAI,CAACG,OAAO,CAACV,GAAG,IAAI;MAClB,IAAIG,WAAW,CAACI,IAAI,CAACY,OAAO,CAACnB,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QACxC;QACA,MAAMW,eAAe,GAAGP,UAAU,CAACJ,GAAG,CAAC;QACvC,IAAIW,eAAe,KAAKS,SAAS,EAAE;UACjCf,QAAQ,CAAC,CAACQ,gBAAgB,EAAEC,KAAK,KAAK;YACpC,IAAIR,kBAAkB,KAAKN,GAAG,EAAE;cAC9BgB,MAAM,CAACC,MAAM,CAACJ,gBAAgB,EAAEC,KAAK,CAAC;YACxC,CAAC,MAAM;cACLD,gBAAgB,CAACV,WAAW,CAACe,EAAE,CAAClB,GAAG,CAAC,CAAC,GAAGc,KAAK;YAC/C;UACF,CAAC,EAAEH,eAAe,CAAC;QACrB;MACF;IACF,CAAC,CAAC;EACJ,CAAC,MAAM,IAAI,OAAOP,UAAU,KAAK,QAAQ,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE;IAC3EC,QAAQ,CAAC,CAACQ,gBAAgB,EAAEC,KAAK,KAAK;MACpCE,MAAM,CAACC,MAAM,CAACJ,gBAAgB,EAAEC,KAAK,CAAC;IACxC,CAAC,EAAEV,UAAU,CAAC;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}