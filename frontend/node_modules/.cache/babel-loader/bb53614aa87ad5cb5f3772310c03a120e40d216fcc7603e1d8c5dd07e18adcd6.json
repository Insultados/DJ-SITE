{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nconst API_URL = 'http://localhost:8080/reviews/';\nconst api = {\n  async getItems() {\n    var _s = $RefreshSig$();\n    const useFetch1 = (url, data) => {\n      _s();\n      const [error, setError] = useState(null);\n      const [isLoaded, setIsLoaded] = useState(false);\n      const [items, setItems] = useState([]);\n      try {\n        useEffect(() => {\n          fetch(url, {\n            body: JSON.stringify(data),\n            credentials: 'include',\n            method: \"POST\"\n          }).then(res => res.json()).then(result => {\n            setIsLoaded(true);\n            setItems(result);\n          }, error => {\n            setIsLoaded(true);\n            setError(error);\n          });\n        }, []);\n      } catch {\n        console.log(\"SERVER REQUEST ERROR\");\n      }\n      return items;\n    };\n    _s(useFetch1, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n  }\n};\nfunction useFetch(url) {\n  _s2();\n  const [items, setItems] = useState([]);\n\n  // fetch data later use this function.\n  const getItems = useCallback(() => {\n    return api.getItems().then(res => {\n      setItems(res);\n    });\n  }, [url]);\n\n  // fetch data when component mount\n  useEffect(() => {\n    getItems();\n  }, [url]);\n  return {\n    data: items,\n    getItems\n  };\n}\n_s2(useFetch, \"C7kHkyrmHcr3GMN3eGXHJkQJFvY=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useCallback","API_URL","api","getItems","_s","$RefreshSig$","useFetch1","url","data","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","body","JSON","stringify","credentials","method","then","res","json","result","console","log","useFetch","_s2"],"sources":["C:/Users/rassl/DJ-SITE/frontend/src/hooks/useFetch.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\n\r\nconst API_URL = 'http://localhost:8080/reviews/';\r\nconst api = {\r\n  async getItems() {\r\n    const useFetch1 = (url: string, data: any) => {\r\n      const [error, setError] = useState(null);\r\n      const [isLoaded, setIsLoaded] = useState(false);\r\n      const [items, setItems] = useState([]);\r\n\r\n      try {\r\n        useEffect(() => {\r\n          fetch(url, {\r\n            body: JSON.stringify(data),\r\n            credentials: 'include',\r\n            method: \"POST\",\r\n          })\r\n            .then(res => res.json())\r\n            .then(\r\n              (result) => {\r\n                setIsLoaded(true);\r\n                setItems(result);\r\n              },\r\n              (error) => {\r\n                setIsLoaded(true);\r\n                setError(error);\r\n              }\r\n            )\r\n        }, [])\r\n      }\r\n      catch {\r\n        console.log(\"SERVER REQUEST ERROR\")\r\n      }\r\n        return items\r\n    }\r\n  },\r\n};\r\n\r\nfunction useFetch(url: string) {\r\n  const [items, setItems] = useState<string[]>([]);\r\n\r\n  // fetch data later use this function.\r\n  const getItems = useCallback(() => {\r\n    return api.getItems().then((res:any) => {\r\n      setItems(res);\r\n    });\r\n  }, [url]);\r\n\r\n  // fetch data when component mount\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [url]);\r\n\r\n  return { data: items, getItems };\r\n}\r\n\r\n\r\n\r\nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAExD,MAAMC,OAAO,GAAG,gCAAgC;AAChD,MAAMC,GAAG,GAAG;EACV,MAAMC,QAAQA,CAAA,EAAG;IAAA,IAAAC,EAAA,GAAAC,YAAA;IACf,MAAMC,SAAS,GAAGA,CAACC,GAAW,EAAEC,IAAS,KAAK;MAAAJ,EAAA;MAC5C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;MACxC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;MAC/C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;MAEtC,IAAI;QACFC,SAAS,CAAC,MAAM;UACdgB,KAAK,CAACR,GAAG,EAAE;YACTS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI,CAAC;YAC1BW,WAAW,EAAE,SAAS;YACtBC,MAAM,EAAE;UACV,CAAC,CAAC,CACCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CACFG,MAAM,IAAK;YACVZ,WAAW,CAAC,IAAI,CAAC;YACjBE,QAAQ,CAACU,MAAM,CAAC;UAClB,CAAC,EACAf,KAAK,IAAK;YACTG,WAAW,CAAC,IAAI,CAAC;YACjBF,QAAQ,CAACD,KAAK,CAAC;UACjB,CACF,CAAC;QACL,CAAC,EAAE,EAAE,CAAC;MACR,CAAC,CACD,MAAM;QACJgB,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACrC;MACE,OAAOb,KAAK;IAChB,CAAC;IAAAT,EAAA,CA7BKE,SAAS;EA8BjB;AACF,CAAC;AAED,SAASqB,QAAQA,CAACpB,GAAW,EAAE;EAAAqB,GAAA;EAC7B,MAAM,CAACf,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAW,EAAE,CAAC;;EAEhD;EACA,MAAMK,QAAQ,GAAGH,WAAW,CAAC,MAAM;IACjC,OAAOE,GAAG,CAACC,QAAQ,CAAC,CAAC,CAACkB,IAAI,CAAEC,GAAO,IAAK;MACtCR,QAAQ,CAACQ,GAAG,CAAC;IACf,CAAC,CAAC;EACJ,CAAC,EAAE,CAACf,GAAG,CAAC,CAAC;;EAET;EACAR,SAAS,CAAC,MAAM;IACdI,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACI,GAAG,CAAC,CAAC;EAET,OAAO;IAAEC,IAAI,EAAEK,KAAK;IAAEV;EAAS,CAAC;AAClC;AAACyB,GAAA,CAhBQD,QAAQ;AAoBjB,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}